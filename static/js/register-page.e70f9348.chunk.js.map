{"version":3,"file":"static/js/register-page.e70f9348.chunk.js","mappings":"uQACA,EAAuB,uBAAvB,EAAsD,wBAAtD,EAAsF,wBAAtF,EAAsH,wB,UCQvG,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAC3B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,cAAY,SAAAC,GAC3B,IAAMC,EAAS,CAAC,EAoBhB,OAnBKD,EAAON,MAEA,2CAA2CQ,KAAKF,EAAON,SACjEO,EAAOP,MAAQ,yBAFfO,EAAOP,MAAQ,WAIZM,EAAOR,KAEDQ,EAAOR,KAAKW,OAAS,IAC9BF,EAAOT,KAAO,wCAFdS,EAAOT,KAAO,WAIXQ,EAAOJ,UAEDI,EAAOJ,SAASO,OAAS,GAAKH,EAAOJ,SAASO,OAAS,MAChEF,EAAOL,SACL,wEAHFK,EAAOL,SAAW,WAKhBI,EAAOI,kBAAoBJ,EAAOJ,WACpCK,EAAOG,gBAAkB,8BAEpBH,CACR,GAAE,IAEGI,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUd,EAAoB,EAApBA,KAAMe,EAAc,EAAdA,MACtC,OAAQf,GACN,IAAK,OACH,OAAOC,EAAQc,GACjB,IAAK,QACH,OAAOZ,EAASY,GAClB,IAAK,WACH,OAAOV,EAAYU,GACrB,QACE,OAEL,EAqBKC,EAAQ,WACZf,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EACD,OACE,iCACE,eAAIY,UAAWC,EAAf,6BACA,kBAAMC,SA3BW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAmBhB,EAAS,CAAEN,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,SACfmB,IAA9BD,EAAiBlB,WACnBV,GAAS8B,EAAAA,EAAAA,IAAS,CAAExB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACjCqB,EAAAA,GAAAA,QAAc,sBAAuB,CACnCC,SAAU,aACVC,UAAW,aAGmBJ,IAA9BD,EAAiBlB,UACnBqB,EAAAA,GAAAA,MAAA,UAAeH,EAAiBlB,UAAY,CAC1CsB,SAAU,aACVC,UAAW,MAGfX,GACD,EAUiCC,UAAWC,EAAQU,aAAa,MAA9D,WACE,mBAAOX,UAAWC,EAAlB,kBAEE,kBACED,UAAWC,EACXW,KAAK,OACL7B,KAAK,OACLe,MAAOf,EACP8B,YAAY,YACZC,SAAUlB,QAGd,mBAAOI,UAAWC,EAAlB,mBAEE,kBACED,UAAWC,EACXW,KAAK,QACL7B,KAAK,QACLe,MAAOb,EACP4B,YAAY,aACZC,SAAUlB,QAGd,mBAAOI,UAAWC,EAAlB,sBAEE,kBACEc,UAAQ,EACRf,UAAWC,EACXW,KAAK,WACL7B,KAAK,WACLe,MAAOX,EACP0B,YAAY,iBACZC,SAAUlB,QAGd,SAAC,KAAD,OAEDjB,IAAU,SAAC,KAAD,CAAUqC,GAAG,QAG7B,C","sources":["webpack://react-homework-template/./src/pages/Register/Register.module.css?12fc","pages/Register/Register.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Register_form__c8aUa\",\"title\":\"Register_title__4r11G\",\"label\":\"Register_label__KQhFe\",\"input\":\"Register_input__d+3tu\"};","import { useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router';\nimport { getIsAuth } from '../../redux/auth/auth-selectors';\nimport { register } from '../../redux/auth/auth-operations';\nimport { toast } from 'react-toastify';\nimport { BtnSubmit } from '../../components/Button/Button';\nimport s from './Register.module.css';\n\nexport default function Register() {\n  const dispatch = useDispatch();\n  const isAuth = useSelector(getIsAuth);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n \n  const validate = useCallback(values => {\n    const errors = {};\n    if (!values.email) {\n      errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors.email = 'Invalid email address';\n    }\n    if (!values.name) {\n      errors.name = 'Required';\n    } else if (values.name.length < 3) {\n      errors.name = 'Name should be longer then 3 symbols';\n    }\n    if (!values.password) {\n      errors.password = 'Required';\n    } else if (values.password.length < 8 || values.password.length > 12) {\n      errors.password =\n        'Password should be longer then 7 symbols and shorter than 12 symbols';\n    }\n    if (values.confirmPassword !== values.password) {\n      errors.confirmPassword = 'Password is not confirmed!';\n    }\n    return errors;\n  }, []);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const validationErrors = validate({ name, email, password });\n    if (validationErrors.password === undefined) {\n      dispatch(register({ name, email, password }));\n      toast.success('You are registered!', {\n        position: 'top-center',\n        autoClose: 2500,\n      });\n    }\n    if (validationErrors.password !== undefined) {\n      toast.error(`${validationErrors.password}`, {\n        position: 'top-center',\n        autoClose: 4000,\n      });\n    }\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <>\n      <h2 className={s.title}>Create account</h2>\n      <form onSubmit={handleSubmit} className={s.form} autoComplete=\"off\">\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            placeholder=\"Your name\"\n            onChange={handleChange}\n          />\n        </label>\n        <label className={s.label}>\n          Email\n          <input\n            className={s.input}\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            placeholder=\"Your email\"\n            onChange={handleChange}\n          />\n        </label>\n        <label className={s.label}>\n          Password\n          <input\n            required\n            className={s.input}\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            placeholder=\"Enter password\"\n            onChange={handleChange}\n          />\n        </label>\n        <BtnSubmit />\n      </form>\n      {isAuth && <Navigate to=\"/\" />}\n    </>\n  );\n}"],"names":["Register","dispatch","useDispatch","isAuth","useSelector","getIsAuth","useState","name","setName","email","setEmail","password","setPassword","validate","useCallback","values","errors","test","length","confirmPassword","handleChange","target","value","reset","className","s","onSubmit","e","preventDefault","validationErrors","undefined","register","toast","position","autoClose","autoComplete","type","placeholder","onChange","required","to"],"sourceRoot":""}